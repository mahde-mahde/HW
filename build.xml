<project default="compile">

  <property name="src.test.dir" location=".C:/Program Files (x86)/Jenkins/workspace/HELLO/HW-uploadToGithub/src/t"/>
    <property name="src.java.dir" location="C:/Program Files (x86)/Jenkins/workspace/HELLO/HW-uploadToGithub/src/pack"/>
  
    <property name="result.dir" location="./target"/>
    <property name="result.javaclasses.dir" location="${gogo.dir}/classes"/>
    <property name="result.testclasses.dir" location="${gogo.dir}/testclasses"/>







    <path id="NecessaryLibraries">
    	
    	<pathelement location="org.eclipse.jdt.junit.JUNIT_CONTAINER/5"/>
        	 <pathelement location="./HW-uploadToGithub/lib/junit-4.12.jar"/>
        <!--matcher-->
        	 <pathelement location="./HW-uploadToGithub/lib/hamcrest-core-1.3.jar"/>
    	  <pathelement location="./HW-uploadToGithub/lib/jacocoant.jar"/>
    </path>


    <target name="compile">
        <mkdir dir="${result.javaclasses.dir}"/>
        <javac srcdir="${src.java.dir}" destdir="${result.javaclasses.dir}" debug="true"  includeantruntime="false">
        </javac>
    </target>


    <target name="compile-testcases" depends="compile">
        <mkdir dir="${result.testclasses.dir}"/>
        <javac srcdir="${src.test.dir}"  destdir="${result.testclasses.dir}" debug="true" includeantruntime="false">
            <classpath>

                <path refid="NecessaryLibraries"/>
                <pathelement location="${result.javaclasses.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-testcases">
        <!--fork : each test will run in its own JVM (to seperate test cases)-->
        <junit printsummary="true" haltonfailure="true" fork="true">
            <classpath>
                <path refid="NecessaryLibraries"></path>
                <pathelement location="${result.javaclasses.dir}"/>
                <pathelement location="${result.testclasses.dir}"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <batchtest >
                <fileset dir="${result.testclasses.dir}" >
                     <include name="**/*Test.class"/>
                </fileset>
            </batchtest>

        </junit>
    </target>
	
	
	


</project>
